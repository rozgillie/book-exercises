# Install and load the "fueleconomy" package
#install.packages("devtools")
#devtools::install_github("hadley/fueleconomy")
library(fueleconomy)
# Install and load the "fueleconomy" package
install.packages("devtools")
devtools::install_github("hadley/fueleconomy")
library(fueleconomy)
library(fueleconomy)
# Install and load the "dplyr" library
install.packages(dplyr)
# Install devtools package: allows installations from GitHub
install.packages("devtools")
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
dif_makes <- vehicles[, "make"]
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(dif_makes)
# Filter the data set for vehicles manufactured in 1997
manaf_1997 <- vehicles[, vehicles$year == "1997"]
# Filter the data set for vehicles manufactured in 1997
manaf_1997 <- vehicles[vehicles$year == "1997", ]
print(manaf_1997)
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
?order
# Filter the data set for vehicles manufactured in 1997
manaf_1997 <- vehicles[vehicles$year == "1997"]
# Filter the data set for vehicles manufactured in 1997
manaf_1997 <- vehicles[vehicles$year == "1997", ]
print(manaf_1997)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
manaf_1997$average <- (manaf_1997$hwy + manaf_1997$cty)/2
View(manaf_1997)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
2wheel<-vehicles[vehicles$drive =="2-Wheel Drive"]
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
2wheel <-vehicles[vehicles$drive =="2-Wheel Drive"]
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
2_wheel <- vehicles[vehicles$drive =="2-Wheel Drive"]
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
two_wheel <- vehicles[vehicles$drive =="2-Wheel Drive"]
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
two_wheel <- vehicles[vehicles$drive =="2-Wheel Drive",]
efficient _2wd <- two_wheel[two_wheel%cty > 20, ]
efficient_2wd <- two_wheel[two_wheel%cty > 20, ]
efficient_twowd <- two_wheel[two_wheel%cty > 20, ]
efficient_twowd <- two_wheel[two_wheel$cty > 20, ]
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
print(efficient_twowd[efficient_twowd$hwy == min(efficient_twowd$hwy), "ID"])
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
print(efficient_twowd[efficient_twowd$hwy == min(efficient_twowd$hwy), "id"])
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
print(two_wheel[two_wheel$hwy == min(two_wheel$hwy), "id"])
# Install and load the "fueleconomy" package
install.packages("devtools")
install.packages("devtools")
# Install and load the "dplyr" library
install.packages("dplyer")
load(dplyer)
load("dplyer")
load("dplyer")
# Install and load the "dplyr" library
install.packages("dplyer")
# Install and load the "dplyr" library
install.packages("dplyer")
library("dplyer")
# Install and load the "dplyr" library
install.packages("dplyer")
# Install and load the "dplyr" library
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
# Install and load the "dplyr" library
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
# Install and load the "dplyr" library
install.packages("dplyr")
# Install and load the "dplyr" library
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
